<% 
const reviewProgress = {}; 
const hideImage = typeof onlyKanji != 'undefined' && onlyKanji;
if(hideImage) state.condition = 0;
%>
<% include partial/review-progress %>
<html>
<head>
	<title>(<%= reviewProgress.createdToday %>新枚, まだ<%= reviewProgress.nowReviews %>枚) 漢字復習</title>
	<%- include('partial/head') %>
	<link rel="stylesheet" type="text/css" href="/css/review.css">

	<link rel="apple-touch-icon" sizes="76x76" href="/icons/estelle-dot/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/icons/estelle-dot/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/icons/estelle-dot/favicon-16x16.png">
	<link rel="manifest" href="/icons/estelle-dot/site.webmanifest">
	<link rel="mask-icon" href="/icons/estelle-dot/safari-pinned-tab.svg" color="#5bbad5">
	<link rel="shortcut icon" href="/icons/estelle-dot/favicon.ico">
	<meta name="msapplication-TileColor" content="#2d89ef">
	<meta name="msapplication-config" content="/icons/estelle-dot/browserconfig.xml">
	<meta name="theme-color" content="#ffffff">

	<script type="text/javascript">
		let voices = window.speechSynthesis.getVoices();
		let voice = null;

		const targetId = '<%= fact.id %>';
		let start = new Date().getTime();
		let results = {};
		let lastInput = "";
		let complete = false;
		<% 
		let initialTryCount = 1; 
		if(typeof onlyKanji != 'undefined' && onlyKanji) initialTryCount = 0;
		%>
		let tries = <%= initialTryCount %>;

		<% if(state.condition == 0) { %>
		const showCorrectAnswer = (res) => {
			$('#reading-input').val(res.reading);
		};
		<% } else { %> 
		const showCorrectAnswer = (res) => {
			$("#speech-out").text(res.reading);
		};
		<% } %>

		let setCorrectColor = () => {
			$("body").css('background-color', 'lightgreen');
		};

		let setWrongColor = () => {
			$("body").css('background-color', 'pink');
		};

		const handleAnswerResponse = (res) => {
			console.log(res);
			start = new Date().getTime();
			if(res.correct == 1){
				setCorrectColor();
				$("#continue").show();
				complete = true;
				showCorrectAnswer(res);
			} else {
				setWrongColor();
				if(tries == 0){
					$("#continue").show();
					complete = true;
					showCorrectAnswer(res);
				} else {
					tries--;
				}
			}
		};

		const showError = (text) => {
			$(".error").text(text);
			$('.error').fadeIn().delay(5000).fadeOut();
		};

		$(document).ready(() => {
			let played = 0;
			const playNextStep = () => {
				if(played == 0){
					const audio = new Audio('/dictionary-word-audio?word=<%= fact.word %>');
					audio.addEventListener("error", function(e) { 
						console.log('trying to play');
						voices = window.speechSynthesis.getVoices();
						let voice = null;
						for(const v of voices){
							if(v.lang == 'ja-JP') {
								voice = v;
								console.log(v);
								// break;
							}
						}
						const msg = new SpeechSynthesisUtterance();
						msg.voice = voice;
						msg.text = '<%= fact.reading %>';
						speechSynthesis.speak(msg);
					});
					audio.play();
					played = 1;
				} else if(played == 1){
					$("#play-band").hide();
					$("#correct-answer").show();
					$("#continue").show();
					complete = true;
					played = 2;
				} else {
					showError("Answer the question below.");
				}
			};

			$(document).keypress((e) => {
				if(new Date().getTime() - start > 5 * 60 * 1000) start = new Date().getTime();

	        	console.log(e.which);
	        	// enter pressed
	        	if(e.which == 13) {
	        		if(complete){
		        		showError("Answer the question below.");
		        		return;
		        	}

		        	playNextStep();
				}
			});

			const logMeaning = (result) => {
				$.post('/log-meaning-assessment', { 
					id: '<%= fact.id %>', 
					word: '<%= fact.word %>', 
					streak: <%= state.streak %>, 
					result: result, 
					input: lastInput, 
					type: 'listening-meaning', 
					skipReset: true,
					duration: new Date().getTime() - start
				}, 
					() => {
						console.log('post finished');
						location.reload();
					});
			};

			$("#meaning-0").click(() => {
				logMeaning(0);
			});

			$("#meaning-1").click(() => {
				logMeaning(1);
			});

			$(".post-play-button").click(() => {
				const audio = new Audio('/audio/<%- fact.audio %>');
				audio.play();
			});


			$("#begin-input").click(() => {
				playNextStep();
			});
		});
	</script>

	<style type="text/css">

		.error {
			padding-top: 16px;
			padding-bottom: 16px;
			background-color: rgba(255,255,102,0.5);
			display: none;
			text-align: center;
		}

		body {
			font-family: Sans-Serif;
			background-color: #d9d9d9;
			width:100%; 
			padding: 0; 
			margin: 100px 0;
		}
	</style>
</head>
<body>
	<%- include('partial/listen-meaning-review-band-content', { reviewProgress: reviewProgress }) %>
</body>
</html>