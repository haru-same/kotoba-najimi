<% if(fact && fact.image) { %>
<%- include('image-background', { fact: fact }) %>
<script type="text/javascript">setBackground()</script>
<% } %>

<div class="card-row display-text large" style="text-align:left; padding-left: 8px"><%- furiganaHtml %></div>
<%- include('text-area') %>
<div id="rendered-sentence" class="card-row display-text large" style="text-align:left; padding-left: 8px"><%= fact.sentence %></div>
<%- include('button', {id: 'submit-button', label: '<i class="fas fa-plus-circle"></i>'}) %>

<script type="text/javascript">
	const sentenceJson = <%- JSON.stringify(fact['sentence-json']) || '""' %>;
	const isContentMap = {};
	for (const jsonPart of sentenceJson) {
		isContentMap[JSON.stringify(jsonPart.text)] = jsonPart.isContent;
	}

	const jsonToHtml = (sentenceJson) => {
		const htmlParts = [];
		for (const jsonPart of sentenceJson) {
			htmlParts.push(`<span class='text-part ${jsonPart.isContent ? 'is-content' : ''}' json='${JSON.stringify(jsonPart.text)}'>`);
			htmlParts.push('<ruby>');
			for (const textPart of jsonPart.text) {
				if (textPart[0] == '\n') {
					htmlParts.push('<br>');
					continue;
				}

				const rb = textPart[0];
				const rt = textPart[1] || '';
				htmlParts.push(`<rb>${rb}</rb><rt>${rt}</rt>`);
			}
			htmlParts.push('</ruby>');
			htmlParts.push('</span>');
		}
		return htmlParts.join('');
	};

	const jsonToFormatString = (jsonParts) => {
		const stringParts = [];
		for (const jsonPart of sentenceJson) {
			for (const textPart of jsonPart.text) {
				if (textPart.length == 1) {
					stringParts.push(textPart[0]);
				} else if (textPart.length == 2) {
					stringParts.push(`［${textPart[0]}：${textPart[1]}］`)
				}
			}
			stringParts.push(' ');
		}
		if (stringParts.length > 0) {
			stringParts.pop();
		}
		return stringParts.join('');
	}

	const formatStringToJson = (formatString) => {
		console.log(formatString.split(' '));
		formatString = formatString.replace(/\n/g, ' \n ').replace(/  +/g, ' ');
		console.log(formatString);
		const parts = formatString.split(' ');
		console.log(parts);
		const jsonParts = [];
		for(const part of parts) {
			let jsonPart = {text:[], isContent:true};
			jsonParts.push(jsonPart);

			let currentReadingPart = null;
			let currentReadingIndex = 0;
			for(let i = 0; i < part.length; i++){
				if(part[i] == '［'){
					currentReadingPart = ['', ''];
					jsonPart.text.push(currentReadingPart);
					currentReadingIndex = 0;
				} else if (part[i] == '：') {
					currentReadingIndex = 1;
				} else if (part[i] == '］') {
					currentReadingPart = null;
				} else {
					if (!currentReadingPart) {
						currentReadingPart = [''];
						jsonPart.text.push(currentReadingPart);
						currentReadingIndex = 0;
					}
					currentReadingPart[currentReadingIndex] += part[i];
				}
			}
			const textPartKey = JSON.stringify(jsonPart.text);
			jsonPart.isContent = textPartKey in isContentMap ? isContentMap[textPartKey] : true;
		}
		return jsonParts;
	};

	const getSentenceJson = () => {
		const formatString = $('textarea').val();
		return formatStringToJson(formatString);
	}

	const updateRenderedSentence = () => {
		$('#rendered-sentence').html(jsonToHtml(getSentenceJson()));
		$('.text-part').click((e) => {
			const textPartElement = $(e.target).closest('.text-part');
			textPartElement.toggleClass('is-content');
			isContentMap[textPartElement.attr('json')] = textPartElement.hasClass('is-content');
		});
	};

	$('textarea').on('keyup', (e) => {
		updateRenderedSentence();
	});

	$('textarea').val(jsonToFormatString(sentenceJson));
	updateRenderedSentence();
	$('textarea').focus();
	$('textarea').select();

	wanakana.bind(document.querySelector('textarea'));

	let setCorrect = () => {
		$("#main-card").toggleClass('correct', true);
		$("#main-card").toggleClass('incorrect', false);
		$("#submit-button").html('<i class="fas fa-redo-alt"></i>');
	};

	$('#submit-button').click(() => {
		$.post('/sentence-json', { user: '<%- user %>', id: '<%- fact.id %>', 'sentence-json': getSentenceJson() }, (res) => {
			console.log(res);
			setCorrect();
			location.reload();
		});
	});

	<% if (stateAdded) { %>
	setCorrect();
	<% } %>
</script>